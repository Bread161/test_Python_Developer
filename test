Task 1: Grid Representation
Create a class CityGrid that can represent the city as an N x M grid. During the initialization of the class, obstructed blocks are randomly placed with coverage >30% (we can change this parameter).

import random

class CityGrid:
    def __init__(self, N, M, blocked_percent):
        self.N = N
        self.M = M
        self.grid = [[0] * M for _ in range(N)]
        self.blocked_percent = blocked_percent
        self.blocked_count = 0
        self.generate_grid()

    def generate_grid(self):
        total_blocks = self.N * self.M
        self.blocked_count = int(total_blocks * self.blocked_percent / 100)
        
        while self.blocked_count > 0:
            i = random.randint(0, self.N - 1)
            j = random.randint(0, self.M - 1)
            if self.grid[i][j] == 0:
                self.grid[i][j] = 1
                self.blocked_count -= 1

    def print_grid(self):
        for row in self.grid:
            print(row)
